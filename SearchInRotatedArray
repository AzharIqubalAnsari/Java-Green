package Array2;

class BinaryOptimize {
    public static int search(int[] nums, int target) {
        int left = 0, right = nums.length - 1;

        while(left <= right){
            int mid = left + (right - left) / 2;

            // Check if mid is the target
            if(nums[mid] == target){
                return mid;
            }

            // Determine which half is sorted
            if(nums[left] <= nums[mid]){ // Left half is sorted
                if(nums[left] <= target && target < nums[mid]){
                    right = mid - 1; // Target in left half
                } else {
                    left = mid + 1; // Target in right half
                }
            } else { // Right half is sorted
                if(nums[mid] < target && target <= nums[right]){
                    left = mid + 1; // Target in right half
                } else {
                    right = mid - 1; // Target in left half
                }
            }
        }

        return -1; // Target not found
    }

    public static void main(String[] args) {
        int nums[] = {4, 5, 1, 2, 3};
        int target = 3;
        System.out.println(search(nums, target));
    }
}
